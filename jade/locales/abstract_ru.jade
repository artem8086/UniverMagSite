-
	var lg = langDB['ru'];
	lg.abs_comment = 'При написании данного реферата магистерская работа еще не завершена. Окончательное завершение: июнь 2019 года. Полный текст работы и материалы по теме могут быть получены у автора или его руководителя после указанной даты.';
	lg.content = 'Содержание';
	lg.introduction = 'Введение';
	lg.abs_theme_urgency = '1. Актуальность темы';
	lg.abs_goals = '2. Цель и задачи исследования, планируемые результаты';
	lg.abs_review = '3. Обзор исследований и разработок';
	lg.abs_review_int = '3.1 Обзор международных источников';
	lg.abs_review_nat = '3.2 Обзор национальных источников';
	lg.abs_review_loc = '3.3 Обзор локальных источников';
	lg.abs_architecture = '4. Основные рассматриваемые архитектуры и особенности процессоров';
	lg.conclusion = 'Выводы';
	lg.references = 'Список источников';


	lg.abs_p1_1 = 'С каждым годом возрастает роль средств вычислительной техники, при этом все компоненты вычислительных систем располагаются на интегральных микросхемах, не позволяя получить доступ к отдельным узлам или элементам, осложняя тем самым процесс изучения функционирования компьютерных систем и их компонентов.';
	lg.abs_p1_2 = 'Глубокое понимание принципов построения и функционирования сложных систем достигается лишь при практической работе с такими системами или их моделями. Даже самое подробное описание работы с базовым цифровым устройством и детальные иллюстрации процесса выполнения команд не могут заменить действительной работы с этим устройством.'
	lg.abs_p1_3 = 'Данная проблема особенно актуальна в технических вузах и для ее решения разрабатываются специальные модели: физические или функциональные<sup><a href="#abs_link1">[1]</a></sup>, наглядно демонстрирующие представление данных, выполнение операций, взаимодействие с периферией по средствам операций ввода-вывода и системы прерываний.';
	lg.abs_p1_4 = 'Для поддержки дисциплин аппаратного направления требуются модели, которые позволяют рассмотреть конвейерную обработку команд, спекулятивное выполнение, кеширование данных, а также разнообразные архитектуры процессорных элементов, такие как: суперскалярная архитектура, VLIW, векторные процессоры. Также дополнительно следует рассмотреть процесс компиляции и оптимизации машинного кода, под разнообразные архитектуры.';

	lg.abs_p2_1 = 'Современный мир уже сложно представить без вычислительной техники, а её основным компонентом все ещё являются процессорные элементы. Для технических вузов особенно важно подготавливать студентов с пониманием принципов работы процессоров, принципов их функционирования и разнообразия архитектур. Как нельзя лучше для этого подходят демонстрационные модели, которые наглядно демонстрируют работу того или иного компонента устройства в определённой ситуации, т.е. учебный материал может быть представлен более эффективно.';

	lg.abs_p3_1 = 'Многоуровневая демонстрационная модель гипотетического компьютера позволит наглядно демонстрировать работу процессорных компонентов, их взаимодействие с памятью, и другими периферийными устройствами.';
	lg.abs_p3_2 = 'Данная магистерская работа посвящена разработке функциональной демонстрационной модели, а также разработке компилятора для данной модели и исследованию способов оптимизации генерации машинного кода.';
	lg.abs_p3_3 = 'В результате работы планируется рассмотреть различные процессорные архитектуры, общие процессорные технологии, такие как конвейерная обработка команда, спекулятивное выполнение, предсказание переходов, кеширование данных. Разработать функциональную демонстрационную модель, и оптимизирующий компилятор для неё.';

	lg.abs_p3_1_1 = 'Несмотря на то, что на сегодняшний день практически каждое электронное устройство управляется микропроцессорами, достаточно подробных демонстрационных моделей существует не так уж и много. На данный момент существует множество демонстрационных систем, которые позволяют освоить базовые принципы работы процессоров и другой периферии, но они не рассматривают такие аспекты работы процессора как конвейерная обработка команд, предсказание ветвлений, спекулятивное выполнение, кеширование данных. То есть такие решения подходят лишь для начальных курсов вузов с технической направленностью.';
	lg.abs_p3_1_2 = 'Кажется, что на данный момент работа процессоров за долгие годы развития процессоров отточена до идеала. Но исследования, проведённые в середине 2017 года в недрах компании Google в сотрудничестве с другими компаниями, показали, что все процессоры фирмы Intel с 1995 года производства и процессоры на архитектуре ARM имеют аппаратные уязвимость<sup><a href="#abs_link2">[2]</a></sup>. Эта уязвимость связана со спекулятивным выполнением команд и реализацией страничной адресации памяти. Спекулятивное выполнение позволяет коду частично выполнятся, не дожидаясь окончания исполнения предыдущих команд, при этом доступ к памяти при спекулятивном исполнении выполняется независимо от прав доступа, при этом если происходит промах по кешу, то данные будут загружены в кеш, после чего их можно прочитать. Таким образом пользовательский код может получать и записывать данные в защищённые области памяти. 4 января 2018 года были произведены атаки, которые использовали данную уязвимость, им дали названия Meltdown<sup><a href="#abs_link3">[3]</a></sup> и Spectre<sup><a href="#abs_link4">[4]</a></sup>, после чего детали уязвимости были опубликованы.';
	lg.abs_melt_spectre = 'Логотипы уязвимостей процессоров Meltdown и Spectre';
	lg.abs_p3_1_3 = 'Таким образом углублённое понимание архитектур и принципов работы процессоров необходимо для обнаружения и понимания возможных ошибок, чтобы не допускать их при проектировании. Демонстрационная модель поможет улучшить процесс обучения путем более наглядного и индивидуализированного подхода к рассмотрению работы процессорных элементов и работы периферии.';

	lg.abs_p3_2_1 = 'Дейл Скриен разработал функциональную модель окружения для симуляции простых компьютеров CPU Sim<sup><a href="#abs_link5">[5]</a></sup>. Программа позволяет студентам понять принципы компьютерной архитектуры. Предоставляет возможность симулировать работу простых процессоров, либо задать конфигурацию собственного процессора со своим набором команд, которые реализуются с помощью последовательности микроинструкций. Позволяет симулировать процессоры различных архитектур, таких как основанных на регистре-аккумуляторе, RISC или стековых машин.';
	lg.abs_p3_2_img = 'Главное окно симулятора CPU Sim';
	lg.abs_p3_2_2 = 'MikroSim<sup><a href="#abs_link6">[6]</a></sup> – это образовательная программа для аппаратно-неспецифического объяснения общего функционирования и поведения виртуального процессора.';

	lg.abs_p3_3_1 = 'Поиск материалов по теме показал наличие публикаций на тему различных процессорных архитектур. Например, архитектура POSTRISC<sup><a href="#abs_link7">[7]</a></sup> – архитектура, идущая на замену RISC. Виртуальный учебный процессор POSTRISC и разработанные для него инструменты (ассемблер, дизассемблер, эмулятор) предназначены для изучения на этом примере внутренней структуры системных программ, таких как ассемблеры, дизассемблеры, компоновщики, для изучения алгоритмов хранения внутренних данных ассемблеров и компиляторов (хеширование и бинарный поиск), для изучения и сравнительного анализа различных сред исполнения и характерных для них моделей исполняемых программ, для изучения особенностей системного программирования для разных целевых машинных архитектур и для изучения архитектурно-зависимых аспектов прикладного программирования.';

	lg.abs_p3_4_1 = 'Была опубликована статья на тему "Моделирование внутренних операций процессорных элементов" в научном журнале ДонНТУ "Информатика и кибернетика", авторами которой явлются наши преподователи Мальчева Р.В. и Завадская Т.В. В статье выполнен анализ необходимости разработки демонстрационных обучающих и имитационных моделей внутри процессорных операций.';

	lg.abs_p4_1 = 'Суперскалярный процессор<sup><a href="#abs_link10">[10]</a></sup> – процессор, поддерживающий так называемый параллелизм на уровне инструкций то есть, процессор, способный выполнять несколько инструкций одновременно за счёт включения в состав его вычислительного ядра нескольких одинаковых функциональных узлов таких как АЛУ, FPU, умножитель , сдвигающее устройство и другие устройства. Планирование исполнения потока инструкций осуществляется динамически вычислительным ядром, а не статически компилятором.';

	lg.abs_p4_2 = 'Архитектура VLIW<sup><a href="#abs_link9">[9]</a></sup> (Very Long Instruction Word – «очень длинная машинная команда») отличаются от традиционных архитектур RISC и CISC, реализованную в современных массовых микропроцессорах. Важно различать архитектуру набора команд – программная модель процессора – от реализации (физический чип и его характеристики). VLIW микропроцессоры и суперскалярные реализации традиционных наборов команд имеют некоторые общие характеристики – несколько исполнительных блоков и возможность выполнять несколько операций одновременно. Так же, как RISC архитектуры имеют более простые и дешевые высокопроизводительные реализации. Архитектура VLIW проще, чем CISC, и дешевле, чем RISC. Из-за аппаратных упрощений, VLIW архитектура, требует поддержки со стороны компилятора.';

	lg.abs_p4_3 = 'Спекулятивное выполнение<sup><a href="#abs_link11">[11]</a></sup> – это метод оптимизации, когда компьютерная система выполняет некоторую задачу, которая может не потребоваться. Работа выполняется до того, как станет известно, действительно ли она необходима, чтобы предотвратить задержку, которая могла бы возникнуть при выполнении после того, как стало известно, что она необходима. Если выясняется, что в конце концов работа не нужна, большинство изменений, внесенных этой работой, отменяются, а результаты игнорируются.';

	lg.abs_p5_1 = 'Роль вычислительной техники, с каждым годом возрастает. Компьютеры становятся всё сложнее, соответственно и уровень подготовки специалистов в технических вузах должен расти. И для достижения необходимого уровня подготовки студентов дисциплин аппаратурной направленности, в ходе данной работы будет разработана многоуровневой модели гипотетического компьютера наглядно демонстрирующие представление данных, выполнение операций, взаимодействие с периферией по средствам операций ввода-вывода и системы прерываний.';
	lg.abs_p5_2 = 'Многоуровневая модель позволит рассмотреть конвейерную обработку команд, спекулятивное выполнение, кеширование данных, а также разнообразные архитектуры процессорных элементов, такие как: суперскалярная архитектура, VLIW, векторные процессоры. Также будет рассмотрен процесс компиляции и оптимизации машинного кода, под разнообразные архитектуры.';
