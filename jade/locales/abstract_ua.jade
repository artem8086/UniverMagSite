-
	var lg = langDB['ua'];
	lg.abs_comment = 'При написанні даного реферату магістерська робота ще не завершена. Остаточне завершення: червень 2019 року. Повний текст роботи та матеріали по темі можуть бути отримані у автора або його керівника після зазначеної дати.';
	lg.content = 'Зміст';
	lg.introduction = 'Вступ';
	lg.abs_theme_urgency = '1. Актуальність теми';
	lg.abs_goals = '2. Мета і задачі дослідження та заплановані результати';
	lg.abs_review = '3. Огляд досліджень та розробок';
	lg.abs_review_int = '3.1 Огляд міжнародних джерел';
	lg.abs_review_nat = '3.2 Огляд національних джерел';
	lg.abs_review_loc = '3.3 Огляд локальних джерел';
	lg.abs_architecture = '4. Основні архітектури що розглядаються та особливості процесорів';
	lg.conclusion = 'Висновки';
	lg.references = 'Перелік посилань';

	lg.abs_p1_1 = 'З кожним роком зростає роль засобів обчислювальної техніки, при цьому всі компоненти обчислювальних систем розташовуються на інтегральних мікросхемах, не дозволяючи отримати доступ до окремих вузлів або елементів, ускладнюючи тим самим процес вивчення функціонування комп\'ютерних систем і їх компонентів.';
	lg.abs_p1_2 = 'Глибоке розуміння принципів побудови і функціонування складних систем досягається лише при практичній роботі з такими системами або їх моделями. Навіть найдокладніше опис роботи з базовим цифровим пристроєм і детальні ілюстрації процесу виконання команд не можуть замінити дійсної роботи з цим пристроєм.'
	lg.abs_p1_3 = 'Дана проблема особливо актуальна в технічних вузах і для її вирішення розробляються спеціальні моделі: фізичні або функціональні<sup><a href="#abs_link1">[1]</a></sup>, наочно демонструють представлення даних, виконання операцій, взаємодія з периферією з допомогою операцій вводу-виводу і системи переривань.';
	lg.abs_p1_4 = 'Для підтримки дисциплін апаратного напрямки потрібні моделі, які дозволяють розглянути конвеєрну обробку команд, спекулятивне виконання, кешування даних, а також різноманітні архітектури процесорних елементів, такі як: суперскалярна архітектура, VLIW, векторні процесори. Також додатково слід розглянути процес компіляції і оптимізації машинного коду, під різноманітні архітектури.';

	lg.abs_p2_1 = 'Сучасний світ вже складно уявити без обчислювальної техніки, а її основним компонентом все ще є процесорні елементи. Для технічних вузів особливо важливо готувати студентів з розумінням принципів роботи процесорів, принципів їх функціонування та різноманітності архітектур. Як не можна краще для цього підходять демонстраційні моделі, які наочно демонструють роботу того чи іншого компонента пристрою в певній ситуації, тобто навчальний матеріал може бути представлений більш ефективно.';

	lg.abs_p3_1 = 'Багаторівнева демонстраційна модель гіпотетичного комп\'ютера дозволить наочно демонструвати роботу процесорних компонентів, їх взаємодія з пам\'яттю, і іншими периферійними пристроями.';
	lg.abs_p3_2 = 'Ця магістерська робота присвячена розробці функціональної демонстраційної моделі, а також розробці компілятора для даної моделі і дослідженню способів оптимізації генерації машинного коду.';
	lg.abs_p3_3 = 'У результаті роботи планується розглянути різні процесорні архітектури, загальні процесорні технології, такі як конвеєрна обробка команда, спекулятивне виконання, передбачення переходів, кешування даних. Розробити функціональну демонстраційну модель, і оптимізуючий компілятор для неї.';

	lg.abs_p3_1_1 = 'Незважаючи на те, що на сьогоднішній день практично кожен електронний пристрій управляється мікропроцесорами, досить докладних демонстраційних моделей існує не так вже й багато. На даний момент існує безліч демонстраційних систем, які дозволяють освоїти базові принципи роботи процесорів та іншої периферії, але вони не розглядають такі аспекти роботи процесора як конвеєрна обробка команд, пророкування розгалужень, спекулятивне виконання, кешування даних. Тобто такі рішення підходять лише для початкових курсів вузів з технічною спрямованістю.';
	lg.abs_p3_1_2 = 'Здається, що на даний момент робота процесорів за довгі роки розвитку процесорів відточена до ідеалу. Але дослідження, проведені в середині 2017 року у надрах компанії Google у співпраці з іншими компаніями, показали, що всі процесори фірми Intel з 1995 року виробництва і процесори на архітектурі ARM мають апаратні вразливість<sup><a href="#abs_link2">[2]</a></sup>. Ця вразливість пов\'язана зі спекулятивним виконанням команд і реалізацією сторінкової адресації пам\'яті. Спекулятивне виконання дозволяє коду частково виконуватися, не чекаючи закінчення виконання попередніх команд, при цьому доступ до пам\'яті при спекулятивному виконанні виконується незалежно від прав доступу, при цьому якщо відбувається промах по кешу, то дані будуть завантажені в кеш, після чого їх можна прочитати. Таким чином призначений для користувача код може отримувати і записувати дані в захищені області пам\'яті. 4 січня 2018 року були проведені атаки, які використовували цю вразливість, їм дали назви Meltdown<sup><a href="#abs_link3">[3]</a></sup> і Spectre<sup><a href = "# abs_link4">[4]</a></sup>, після чого деталі уразливості були опубліковані.';
	lg.abs_melt_spectre = 'Логотипи вразливостей процесорів Meltdown і Spectre';
	lg.abs_p3_1_3 = 'Таким чином поглиблене розуміння архітектур і принципів роботи процесорів необхідно для виявлення і розуміння можливих помилок, щоб не допускати їх при проектуванні. Демонстраційна модель допоможе поліпшити процес навчання шляхом ширшого доступу та індивідуалізованого підходу до розгляду роботи процесорних елементів і роботи периферії.';

	lg.abs_p3_2_1 = 'Дейл Скриен розробив функціональну модель оточення для симуляції простих комп\'ютерів CPU Sim<sup><a href="#abs_link5">[5]</a></sup>. Програма дозволяє студентам зрозуміти принципи комп\'ютерної архітектури. Надає можливість симулювати роботу простих процесорів, або задати конфігурацію власного процесора зі своїм набором команд, які реалізуються за допомогою послідовності мікроінструкцій. Має здатність симулювати процесори різних архітектур, таких як заснованих на регістрі-акумуляторі, RISC або стекових машин.';
	lg.abs_p3_2_2 = 'MikroSim<sup><a href="#abs_link6">[6]</a></sup> – це освітня програма для апаратно-неспецифічного пояснення загального функціонування і поведінки віртуального процесора.';

	lg.abs_p3_3_1 = 'Пошук матеріалів по темі показав наявність публікацій на тему різних процесорних архітектур. Наприклад, архітектура POSTRISC<sup><a href="#abs_link7">[7]</a></sup> – архітектура, що йде на заміну RISC. Віртуальний навчальний процесор POSTRISC і розроблені для нього інструменти (асемблер, дизассемблер, емулятор) призначені для вивчення на цьому прикладі внутрішньої структури системних програм, таких як асемблери, дизасемблери, компоновщики, для вивчення алгоритмів зберігання внутрішніх даних ассемблеров і компіляторів (змішування і бінарний пошук), для вивчення і порівняльного аналізу різних середовищ виконання і характерних для них моделей виконуваних програм, для вивчення особливостей системного програмування для різних цілий евих машинних архітектур і для вивчення архітектурно-залежних аспектів прикладного програмування.';

	lg.abs_p4_1 = 'Суперскалярний процесор<sup><a href="#abs_link10">[10]</a></sup> – процесор, що підтримує так званий паралелізм на рівні інструкцій тобто, процесор, здатний виконувати декілька інструкцій одночасно за рахунок включення до складу його обчислювального ядра кількох однакових функціональних вузлів таких як АЛУ, FPU, умножитель, зрушує пристрій та інші пристрої. Планування виконання потоку інструкцій здійснюється динамічно обчислювальним ядром, а не статично компілятором.';

	lg.abs_p4_2 = 'Архітектура VLIW<sup><a href="#abs_link9">[9]</a></sup> (Very Long Instruction Word – «дуже довга машинна команда») відрізняються від традиційних архітектур RISC і CISC, реалізовану в сучасних масових мікропроцесорах. Важливо розрізняти архітектуру набору команд - програмна модель процесора - від реалізації (фізичний чіп і його характеристики). VLIW мікропроцесори і суперскалярні реалізації традиційних наборів команд мають деякі загальні характеристики - кілька виконавчих блоків і можливість виконувати кілька операцій одночасно. Так само, як RISC архітектури мають більш прості і дешеві високопродуктивні реалізації. Архітектура VLIW простіше, ніж CISC, і дешевше, ніж RISC. Через апаратних спрощень, VLIW архітектура, вимагає підтримки з боку компілятора.';

	lg.abs_p4_3 = 'Спекулятивне виконання<sup><a href="#abs_link11">[11]</a></sup> - це метод оптимізації, коли комп\'ютерна система виконує деяку задачу, яка може не знадобитися. Робота виконується до того, як стане відомо, чи дійсно вона необхідна, щоб запобігти затримці, яка могла б виникнути при виконанні після того, як стало відомо, що вона необхідна. Якщо з\'ясовується, що в кінці кінців робота не потрібна, більшість змін, внесених цією роботою, скасовуються, а результати ігноруються.';

	lg.abs_p5_1 = 'Роль обчислювальної техніки, з кожним роком зростає. Комп\'ютери стають все складніше, відповідно і рівень підготовки фахівців в технічних вузах повинен зростати. І для досягнення необхідного рівня підготовки студентів дисциплін апаратурною спрямованості, в ході даної роботи буде розроблена багаторівневої моделі гіпотетичного комп\'ютера наочно демонструють уявлення даних, виконання операцій, взаємодія з периферією за коштами операцій введення-виведення і системи переривань.';
	lg.abs_p5_2 = 'Багаторівнева модель дозволить розглянути конвеєрну обробку команд, спекулятивне виконання, кешування даних, а також різноманітні архітектури процесорних елементів, такі як: суперскалярна архітектура, VLIW, векторні процесори. Також буде розглянуто процес компіляції і оптимізації машинного коду, під різноманітні архітектури.';
