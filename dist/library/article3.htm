<!DOCTYPE html><html lang="ru"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Библиотека &ndash; Святоха А.А. &ndash; Исследование зависимости применения процессорных архитектур</title><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimal-ui"><meta name="author" content="Святоха Артём Александрович"><link rel="icon" type="image/png" href="../images/masters_i.png"><link rel="stylesheet" href="../css/main.css"></head><body><div class="header container-wrapper"><div class="container"><div class="topmenu clearfix"><div class="left"><a href="../index.htm#library" data-text="Назад в библеотеку" class="icon-link icon-link--no-icon"></a></div><div class="donntu-links right"><a href="http://donntu.org/" target="_blank" data-text="ДонНТУ" class="icon-link icon-link--donntu icon-link--grayscale"></a><a href="http://masters.donntu.org/" target="_blank" data-text="Портал магистров" class="icon-link icon-link--mportal icon-link--grayscale"></a></div><div class="nav-menu right"><div class="nav-button"><span></span></div><div class="nav-wrapper"><div class="nav-list"><a href="http://donntu.org/" target="_blank" data-text="ДонНТУ" class="icon-link icon-link--donntu icon-link--grayscale nav-link"></a><a href="http://masters.donntu.org/" target="_blank" data-text="Портал магистров" class="icon-link icon-link--mportal icon-link--grayscale nav-link"></a></div></div></div></div><div class="head library zx-border"></div></div></div><div class="content container-wrapper"><div class="container library"><h1>Исследование зависимости применения процессорных архитектур</h1><p class="no-indent"><strong>Автор:</strong> Святоха А.А.</p><h2 class="no-indent">Аннотации</h2><p><strong>Святоха А.А.</strong> В данной работе рассмотрены зависимости применения процессоров на различных архитектурах, в различных классах вычислительных устройств.</p><p class="no-indent"><strong>Цель:</strong> рассмотреть и выявить закономерности распространения процессоров различных архитектур, в различных классах вычислительных устройств.</p><p>Для начала рассмотрим базовые архитектуры процессоров:</p><p><strong>CISC</strong> (англ. Complex Instruction Set Computing) — концепция проектирования процессоров, которая характеризуется следующим набором свойств:</p><ul><li>большим числом различных по формату и длине команд;</li><li>введением большого числа различных режимов адресации;</li><li>обладает сложной кодировкой инструкции.</li></ul><p>Процессору с архитектурой CISC приходится иметь дело с более сложными инструкциями неодинаковой длины. Выполнение одиночной CISC-инструкции может происходить быстрее, однако обрабатывать несколько таких инструкций параллельно сложнее.</p><p><strong>RISC</strong> (Reduced Instruction Set Computing). Процессор с сокращенным набором команд. Система команд имеет упрощенный вид. Все команды одинакового формата с простой кодировкой. Обращение к памяти происходит посредством команд загрузки и записи, остальные команды типа регистр-регистр. Команда, поступающая в CPU, уже разделена по полям и не требует дополнительной дешифрации.</p><p>Часть кристалла освобождается для включения дополнительных компонентов. Степень интеграции ниже, чем в предыдущем архитектурном варианте, поэтому при высоком быстродействии допускается более низкая тактовая частота. Команда меньше загромождает ОЗУ, CPU дешевле. Программной совместимостью указанные архитектуры не обладают. Отладка программ на RISC более сложна. Данная технология может быть реализована программно-совместимым с технологией CISC (например, суперскалярная технология).</p><p><strong>VLIW</strong> (англ. very long instruction word — «очень длинная машинная команда») — архитектура процессоров с несколькими вычислительными устройствами. Характеризуется тем, что одна инструкция процессора содержит несколько операций, которые должны выполняться параллельно[1][2]. Фактически это «видимое программисту» микропрограммное управление, когда машинный код представляет собой лишь немного свёрнутый микрокод для непосредственного управления аппаратурой.</p><p>В суперскалярных процессорах также есть несколько вычислительных модулей, но задача распределения работы между ними решается аппаратно. Это сильно усложняет устройство процессора, и может быть чревато ошибками. В процессорах VLIW задача распределения решается во время компиляции и в инструкциях явно указано, какое вычислительное устройство какую команду должно выполнять.</p><h2>Статистика по мобильным телефонам</h2><p>На рынке мобильных телефонов в основном преобладают процессоры архитектуры RISC, из-за их малого энергопотребления.</p><h2>Статистика по персональным компьютерам</h2><p>В персональных компьютерах повсеместно используют процессоры на архитектуре x86, которые относятся к классу CISC процессоров, но при этом имеют гибридную реализацию.</p><h2>Статистика по суперкомпьютерам в топ500</h2><P>Примерно в период с 1994 по 2003 года практически все суперкомпьютеры базировались на процессорах с архитектурой RISC, так как на тот момент из-за более упрощенной аппаратной реализации и более быстрого конвейера команд RISC процессоры значительно превосходили процессоры на архитектуре CISC. Также в этот период проводились опыты по внедрению процессоров на архитектуре VLIW.</P><p>Однако уже с года 2004 наблюдается переломный момент, так как фирма Intel начинает продвигать свои процессоры линейки Xeon, которые основаны на архитектуре x86. Из-за своей гибридной реализации они значительно превосходят по производительности процессоры на других архитектурах.</p><h2>Проект Itanium</h2><p>Примерно с 2001 года компания Intel начинает эксперименты со внедрением в суперкомпьютеры процессоров на архитектуре EPIC, она же VLIW. Это должны были быть самые производительные процессоры на тот момент, но как показал практика они имеют ряд существенных недостатков:</p><ul><li>Непредсказуемые ветвления, усложняющие планирование и упаковку параллельных операций в командные слова VLIW.</li><li>Непредсказуемые промахи кэша замедляли выполнение и приводили к переменным задержкам выполнения.</li><li>Наборы команд VLIW раздували объём кода.</li><li>Оказалось, слишком сложно создать хорошие оптимизирующие компиляторы для машин VLIW.</li></ul><p>Пожалуй, самый известный в мире специалист по компьютерным алгоритмам Дональд Кнут заметил: «Подход Itanium… казался таким великолепным — пока не выяснилось, что желанные компиляторы по сути невозможно написать».</p><p>По этим причинам проект был закрыт в 2009 году, но стоит отметить, что Intel производит процессоры на данной архитектуре и по настоящее время.</p><h2>Выводы</h2><p>На данный момент слоилась такая ситуация, что в вычислительной технике, которая не критична к потреблению энергии в преобладающим большинством установлены процессоры на архитектуре x86. А в тех устройствах, где важно маленькое энергопотребления встраивают процессоры на архитектуре RISC.</p><h2>Список использованной литературы</h2><ol class="links"><li>CISC - Свободная энциклопедия: <a href="https://ru.wikipedia.org/wiki/CISC">https://ru.wikipedia.org/wiki/CISC</a></li><li>RISC - Свободная энциклопедия: <a href="https://ru.wikipedia.org/wiki/RISC">https://ru.wikipedia.org/wiki/RISC</a></li><li>VLIW - Свободная энциклопедия: <a href="https://ru.wikipedia.org/wiki/VLIW">https://ru.wikipedia.org/wiki/VLIW</a></li><li>Itanium - Свободная энциклопедия: <a href="https://ru.wikipedia.org/wiki/Itanium">https://ru.wikipedia.org/wiki/Itanium</a></li><li>TOP 500 - Оффицальный сайт: <a href="https://www.top500.org">https://www.top500.org</a></li></ol></div></div><script src="https://code.jquery.com/jquery-3.3.1.min.js"></script><script src="../js/main.js"></script></body></html>